
;; Function main (main, funcdef_no=5, decl_uid=9868, cgraph_uid=5, symbol_order=5)

(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) "query.c":12 82 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) "query.c":12 81 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f451d792120 *.LC0>)) "query.c":13 81 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("is_word") [flags 0x3]  <function_decl 0x7f451d786100 is_word>) [0 is_word S1 A8])
            (const_int 0 [0]))) "query.c":13 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) "query.c":13 82 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 87 [ _1 ])) "query.c":13 82 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f451d7921b0 *.LC1>)) "query.c":13 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "query.c":13 84 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f451daedf00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "query.c":13 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 14 13 17 2 (set (reg:SI 88 [ _5 ])
        (const_int 0 [0])) "<built-in>":0 82 {*movsi_internal}
     (nil))
(insn 17 14 21 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _5 ])) "<built-in>":0 82 {*movsi_internal}
     (nil))
(insn 21 17 22 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) "query.c":14 82 {*movsi_internal}
     (nil))
(insn 22 21 0 2 (use (reg/i:SI 0 ax)) "query.c":14 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function is_word (is_word, funcdef_no=6, decl_uid=9865, cgraph_uid=6, symbol_order=6)

(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [5 word+0 S8 A64])
        (reg:DI 5 di [ word ])) "query.c":16 81 {*movdi_internal}
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.9901+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "query.c":16 1012 {stack_tls_protect_set_di}
     (nil))
(insn 7 4 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f451d792630 *.LC2>)) "query.c":21 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f451d7926c0 *.LC3>)) "query.c":21 81 {*movdi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f451dbc0a00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "query.c":21 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:DI 93)
        (reg:DI 0 ax)) "query.c":21 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1048 [0xfffffffffffffbe8])) [4 fp+0 S8 A64])
        (reg:DI 93)) "query.c":21 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -1048 [0xfffffffffffffbe8])) [4 fp+0 S8 A64])
            (const_int 0 [0]))) "query.c":21 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "query.c":21 627 {*jcc_1}
     (nil)
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f451d792750 *.LC4>)) "query.c":22 81 {*movdi_internal}
     (nil))
(call_insn 16 15 17 3 (call (mem:QI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f451dbd7600 perror>) [0 perror S1 A8])
        (const_int 0 [0])) "query.c":22 665 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 80 3 (set (reg:SI 91 [ _6 ])
        (const_int -1 [0xffffffffffffffff])) "query.c":23 82 {*movsi_internal}
     (nil))
(jump_insn 80 17 81 3 (set (pc)
        (label_ref 64)) "query.c":23 -1
     (nil)
 -> 64)
;;  succ:       9 [100.0%] 

(barrier 81 80 20)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
(code_label 20 81 21 4 4 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 82 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -1052 [0xfffffffffffffbe4])) [1 toReturn+0 S4 A32])
        (const_int 0 [0])) "query.c":26 82 {*movsi_internal}
     (nil))
(jump_insn 82 22 83 4 (set (pc)
        (label_ref 44)) "query.c":27 -1
     (nil)
 -> 44)
;;  succ:       7 [100.0%] 

(barrier 83 82 53)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 53 83 25 5 8 (nil) [1 uses])
(note 25 53 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) "query.c":28 218 {*adddi_1}
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg:DI 94)) "query.c":28 81 {*movdi_internal}
     (nil))
(call_insn/i 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f451dae7700 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) "query.c":28 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 5 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "query.c":28 81 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:DI 88 [ _2 ])
                (plus:DI (reg:DI 87 [ _1 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "query.c":28 218 {*adddi_1}
     (nil))
(insn 31 30 32 5 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 88 [ _2 ]))
                (const_int -1040 [0xfffffffffffffbf0])) [0 buf S1 A8])
        (const_int 0 [0])) "query.c":28 84 {*movqi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1064 [0xfffffffffffffbd8])) [5 word+0 S8 A64])) "query.c":30 81 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) "query.c":30 218 {*adddi_1}
     (nil))
(insn 34 33 35 5 (set (reg:DI 4 si)
        (reg:DI 95)) "query.c":30 81 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 5 di)
        (reg:DI 96)) "query.c":30 81 {*movdi_internal}
     (nil))
(call_insn/i 36 35 37 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f451dae5d00 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "query.c":30 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 37 36 38 5 (set (reg:SI 89 [ _3 ])
        (reg:SI 0 ax)) "query.c":30 82 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 0 [0]))) "query.c":30 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "query.c":30 627 {*jcc_1}
     (nil)
 -> 44)
;;  succ:       6 (FALLTHRU)
;;              7 (DFS_BACK)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 84 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -1052 [0xfffffffffffffbe4])) [1 toReturn+0 S4 A32])
        (const_int 1 [0x1])) "query.c":31 82 {*movsi_internal}
     (nil))
(jump_insn 84 41 85 6 (set (pc)
        (label_ref 56)) "query.c":32 -1
     (nil)
 -> 56)
;;  succ:       8 [100.0%] 

(barrier 85 84 44)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (DFS_BACK)
;;              4 [100.0%] 
(code_label 44 85 45 7 6 (nil) [2 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1048 [0xfffffffffffffbe8])) [4 fp+0 S8 A64])) "query.c":27 81 {*movdi_internal}
     (nil))
(insn 47 46 48 7 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) "query.c":27 218 {*adddi_1}
     (nil))
(insn 48 47 49 7 (set (reg:DI 1 dx)
        (reg:DI 97)) "query.c":27 81 {*movdi_internal}
     (nil))
(insn 49 48 50 7 (set (reg:SI 4 si)
        (const_int 1024 [0x400])) "query.c":27 82 {*movsi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:DI 5 di)
        (reg:DI 98)) "query.c":27 81 {*movdi_internal}
     (nil))
(call_insn 51 50 52 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f451dbcf800 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) "query.c":27 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 52 51 54 7 (set (reg/f:DI 90 [ _4 ])
        (reg:DI 0 ax)) "query.c":27 81 {*movdi_internal}
     (nil))
(insn 54 52 55 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ _4 ])
            (const_int 0 [0]))) "query.c":27 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 55 54 56 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "query.c":27 627 {*jcc_1}
     (nil)
 -> 53)
;;  succ:       5
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
(code_label 56 55 57 8 7 (nil) [1 uses])
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -1048 [0xfffffffffffffbe8])) [4 fp+0 S8 A64])) "query.c":35 81 {*movdi_internal}
     (nil))
(insn 59 58 60 8 (set (reg:DI 5 di)
        (reg:DI 99)) "query.c":35 81 {*movdi_internal}
     (nil))
(call_insn 60 59 61 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f451dbc0700 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "query.c":35 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 64 8 (set (reg:SI 91 [ _6 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -1052 [0xfffffffffffffbe4])) [1 toReturn+0 S4 A32])) "query.c":36 82 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              3 [100.0%] 
(code_label 64 61 65 9 9 (nil) [1 uses])
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 70 9 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ _6 ])) 82 {*movsi_internal}
     (nil))
(insn 70 66 71 9 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) "query.c":37 82 {*movsi_internal}
     (nil))
(insn 71 70 72 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.9901+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "query.c":37 1016 {stack_tls_protect_test_di}
     (nil))
(jump_insn 72 71 78 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "query.c":37 627 {*jcc_1}
     (nil)
 -> 75)
;;  succ:       11
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
(note 78 72 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 73 78 74 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f451d793d00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "query.c":37 665 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 74 73 75)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 75 74 79 11 10 (nil) [1 uses])
(note 79 75 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 79 0 11 (use (reg/i:SI 0 ax)) "query.c":37 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function py_myFunction (py_myFunction, funcdef_no=7, decl_uid=9881, cgraph_uid=7, symbol_order=7)

(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [6 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "query.c":39 81 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [6 args+0 S8 A64])
        (reg:DI 4 si [ args ])) "query.c":39 81 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 89)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f451d79e1b0 *.LC5>)) "query.c":40 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 s+0 S8 A64])
        (reg/f:DI 89)) "query.c":40 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 s+0 S8 A64])) "query.c":41 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 90)) "query.c":41 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f451d79e240 *.LC6>)) "query.c":41 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "query.c":41 84 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Py_BuildValue") [flags 0x41]  <function_decl 0x7f451d717500 Py_BuildValue>) [0 Py_BuildValue S1 A8])
            (const_int 0 [0]))) "query.c":41 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 14 13 17 2 (set (reg/f:DI 87 [ _4 ])
        (reg:DI 0 ax)) "query.c":41 81 {*movdi_internal}
     (nil))
(insn 17 14 21 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _4 ])) "query.c":41 81 {*movdi_internal}
     (nil))
(insn 21 17 22 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "query.c":42 81 {*movdi_internal}
     (nil))
(insn 22 21 0 2 (use (reg/i:DI 0 ax)) "query.c":42 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

